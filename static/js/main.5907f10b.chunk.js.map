{"version":3,"sources":["App.js","component/Modal1.js","reportWebVitals.js","index.js"],"names":["CustomToast","closeToast","onClick","toast","configure","App","className","position","POSITION","TOP_LEFT","error","TOP_RIGHT","autoClose","info","TOP_CENTER","warning","BOTTOM_LEFT","success","BOTTOM_RIGHT","BOTTOM_CENTER","Modal1","useState","modelIsOpen","setModalIsOpen","isOpen","onRequestClose","style","overlay","backgroundColor","content","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAKMA,G,YAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,WAClB,OACI,yDAEI,wBAAQC,QAAUD,EAAlB,wBAKZE,IAAMC,YA+BSC,MA9Bf,WAqBE,OACE,sBAAKC,UAAU,MAAf,UACI,mDACF,uDACA,wBAAQJ,QAvBK,WACXC,YAAM,qBAAqB,CAACI,SAAUJ,IAAMK,SAASC,WACrDN,IAAMO,MAAM,cAAC,EAAD,IAAe,CACvBH,SAAUJ,IAAMK,SAASG,UACzBC,WAAU,IAEdT,IAAMU,KAAK,oBAAoB,CAC3BN,SAAUJ,IAAMK,SAASM,WACzBF,UAAU,MAEdT,IAAMY,QAAQ,uBAAuB,CACjCR,SAAUJ,IAAMK,SAASQ,cAE7Bb,IAAMc,QAAQ,uBAAuB,CACjCV,SAAUJ,IAAMK,SAASU,eAE7Bf,YAAM,qBAAqB,CAACI,SAAUJ,IAAMK,SAASW,iBAOvD,yB,+BCRSC,MA5Bf,WAAmB,IAAD,EAEwBC,oBAAS,GAFjC,mBAEPC,EAFO,KAEMC,EAFN,KAGd,OACI,sBAAKjB,UAAU,QAAf,UACI,wBAAQJ,QAAS,kBAAKqB,GAAe,IAArC,wBACA,eAAC,IAAD,CACAC,OAAQF,EACRG,eAAgB,kBAAMF,GAAe,IACrCG,MACI,CACIC,QAAS,CACLC,gBAAgB,QAEpBC,QAAS,CACLC,MAAM,WATlB,UAcI,8CACA,2CACA,wBAAQ5B,QAAS,kBAAIqB,GAAe,IAApC,0BCdDQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,gCACI,cAAC,EAAD,IACI,uBACJ,cAAC,EAAD,SAINC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5907f10b.chunk.js","sourcesContent":["import React from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nconst CustomToast = ({closeToast}) =>{\n    return(\n        <div>\n            Some Thing Went Wrong!\n            <button onClick={ closeToast } >Close</button>\n        </div>\n    )   \n}\n\ntoast.configure()\nfunction App() {\n\n    const notify = () =>{\n        toast('Basic Notification',{position: toast.POSITION.TOP_LEFT })\n        toast.error(<CustomToast/>,{\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose:false\n        })\n        toast.info('Info Notification',{\n            position: toast.POSITION.TOP_CENTER ,\n            autoClose:8000\n        })\n        toast.warning('warning Notification',{\n            position: toast.POSITION.BOTTOM_LEFT\n         })\n        toast.success('Success Notification',{\n            position: toast.POSITION.BOTTOM_RIGHT\n         })\n        toast('Basic Notification',{position: toast.POSITION.BOTTOM_CENTER })\n    }\n\n  return (\n    <div className=\"App\">\n        <h1>Hosted on Github.</h1>\n      <h2>Tostify Notifications</h2>\n      <button onClick={ notify}>Notify!</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport './Style.css';\r\n\r\nfunction Modal1() {\r\n\r\n    const [modelIsOpen, setModalIsOpen] = useState(false)\r\n    return(\r\n        <div className=\"style\">\r\n            <button onClick={()=> setModalIsOpen(true) }>Open Modal</button>\r\n            <Modal \r\n            isOpen={modelIsOpen} \r\n            onRequestClose={() => setModalIsOpen(false)}\r\n            style={\r\n                {\r\n                    overlay: {\r\n                        backgroundColor:'grey'\r\n                    },\r\n                    content: {\r\n                        color:'orange'\r\n                    }\r\n                }                \r\n            }\r\n            >\r\n                <h1>Modal Header</h1>\r\n                <p>Modal body</p>\r\n                <button onClick={()=>setModalIsOpen(false)}>Close</button>\r\n            </Modal> \r\n        </div>\r\n    );    \r\n}\r\n\r\nexport default Modal1;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Modal1 from './component/Modal1';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n        <App />\n            <br/>\n        <Modal1/>\n    </div>  \n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}